on:
  push:
    paths-ignore: # don't run the fast version when an Rmd file changes
      - "**.Rmd"
      - "environment.yml"
      - ".github/workflows/ci.yaml"

name: ci_fast

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 3 # Fetch all history for .GitInfo and .Lastmod

      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: website
          path: ./public
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build, tag, and push image to Github
        env:
          DEVOPS_DOCKER_FILE: ./devops/precompiled.dockerfile
        run: |
          baseRef="${GITHUB_REF#*/}"
          baseRef="${baseRef#*/}"
          case "${baseRef}" in
          main)
            imageTag="latest"
            ;;
          *)
            imageTag="${baseRef//\//_}" # replace `/` with `_` in branch name
            ;;
          esac
          echo "using tag: --${imageTag}--"
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository.name }}:$imageTag --file ${DEVOPS_DOCKER_FILE} .
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository.name }}:$imageTag

          # trigger a webhook update
          curl -H "Authorization: Bearer ${{ secrets.DELPHI_DEPLOY_WEBHOOK_TOKEN }}" \
               -X POST ${{ secrets.DELPHI_DEPLOY_WEBHOOK_URL }} \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "repository=ghcr.io/cmu-delphi/${{ github.repository.name }}&tag=$imageTag"
