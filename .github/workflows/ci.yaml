name: ci

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 3 # Fetch all history for .GitInfo and .Lastmod

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node3-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node3-
      - run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: website
          path: ./public

  image:
    needs: build
    # only on tags and dev branch
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: cmu-delphi-deploy-machine
          password: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_PAT }}
      - name: Build Image
        env:
          DEVOPS_DOCKER_FILE: ./devops/Dockerfile
        run: |
          docker build -t repo --file ${DEVOPS_DOCKER_FILE} .
      - name: Resolve Tag
        id: tagname
        run: |
          baseRef="${GITHUB_REF#*/}"
          imageTag="${baseRef#*/}"
          echo "::set-output name=tag::$imageTag"
          echo "::set-output name=repo::ghcr.io/${{ github.repository }}"
      - name: Push Image Tag
        run: |
          docker tag repo ${{ steps.tagname.outputs.repo }}:${{ steps.tagname.outputs.tag }}
          docker push ${{ steps.tagname.outputs.repo }}:${{ steps.tagname.outputs.tag }}
      - name: Trigger Webhook
        run: |
          # trigger a webhook update
          curl -H "Authorization: Bearer ${{ secrets.DELPHI_DEPLOY_WEBHOOK_TOKEN }}" \
               -X POST ${{ secrets.DELPHI_DEPLOY_WEBHOOK_URL }} \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "repository=${{ steps.tagname.outputs.repo }}&tag=${{ steps.tagname.outputs.tag }}"
      - name: Push Latest Tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker tag repo ${{ steps.tagname.outputs.repo }}:latest
          docker push ${{ steps.tagname.outputs.repo }}:latest
      - name: Trigger Latest Webhook
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # trigger a webhook update
          curl -H "Authorization: Bearer ${{ secrets.DELPHI_DEPLOY_WEBHOOK_TOKEN }}" \
               -X POST ${{ secrets.DELPHI_DEPLOY_WEBHOOK_URL }} \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "repository=${{ steps.tagname.outputs.repo }}&tag=latest"
